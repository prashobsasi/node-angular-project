openapi: 3.0.0
info:
  title: Employee Management API
  description: |-
    This is a sample Employee Management API for CRUD Operation.
  version: 1.0.0
  contact:
    name: -Prashob Sasidharan
    email: prashob.sasi@gmail.com
  
servers:
  - url: http://localhost:3000
tags:
  - name: Employee
    description: CRUD operation for your Employee
paths:
  /employees/createEmployee:
    post:
      tags:
        - Employee
      summary: Add a new employee to the DB
      description: Add a new employee to the DB
      operationId: addEmployee
      requestBody:
        description: Create a new  employee in the DB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /employees/getEmployees:
    get:
      tags:
        - Employee
      summary: Finds All Employees
      description: Finds All Employees
      operationId: getAllEmployees
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid status value
  /employees/getEmployees/{id}:
    get:
      tags:
        - Employee
      summary: Find Employee by ID
      description: Returns a single Employee
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          description: ID of Employee to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Employee not found
    
  /employees/updateEmployee/{id}:
    put:
      tags:
        - Employee
      summary: update Employee
      description: ''
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          description: ID of employee to update
          required: true
          schema:
            type: integer
      requestBody:
        description: Update Employee in the DB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /employees/deleteEmployee/{id}:
   delete:
      tags:
        - Employee
      summary: Delete Employee
      description: Deleting Employee.
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: integer
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
components:
  schemas:
    Employee:
      type: object
      properties:
        name:
          type: string
          example: 'Prashob Sasidharan'
        empid:
          type: string
          example: 'EMP01'
        department:
          type: string
          example: 'HR'
      xml:
        name: Employee
   